rt.nucVSraw <- rt.nucVSraw %>%
mutate(Filename = gsub("^[^/]*/","",Filename))
rt.nucVSraw <- rt.nucVSraw %>%
mutate(Filename = gsub(".mat","",Filename))
#################################################################################
rt.nucVSraw <- rt.nucVSraw %>%
separate(Filename,c("speaker","crit_word","prec_speakers","prec_word","trial_num","tune"),remove = F)
rt.nucVSraw$t_ms<-as.numeric(rt.nucVSraw$t_ms)
# semitones for 10 ms only ---
library(hqmisc)
rt.nucVSraw<-rt.nucVSraw %>%
group_by(speaker) %>%
mutate(speaker_mean= mean(F0),
ST=f2st(F0,base=speaker_mean))
rt.nucVSraw %>% group_by(Filename) %>%
mutate(time_step = lead(t_ms)-t_ms) ->rt.nucVSraw
sunderbg1973risefemale = 1.2631578947
# from 12 ST in 95 ms
sunderbg1973fallfemale = -1.7142857143
# from 12 ST in 70 ms
sunderbg1973risemale = 1.1428571429
# from 12 ST in 105 ms
sunderbg1973fallmale = -1.6
# allowing really fast movements from sundberg
sunderbg1973fast_rise = 1.6
sunderbg1973fast_fall = -1.7142857143
rt.nucVSraw$speaker_gender<-"female participant"
table(rt.nucVSraw$speaker_gender)
rt.nucVSraw<-rt.nucVSraw %>%
group_by(Filename) %>%
mutate(lead_ST= lead(ST, order_by=t_ms),
ST_diff = lead_ST-ST)
View(rt.nucVSraw)
rt.nucVSraw<-rt.nucVSraw %>%
group_by(speaker) %>%
mutate(speaker_mean= mean(F0),
ST=f2st(F0,base=300))
rt.nucVSraw %>% group_by(Filename) %>%
mutate(time_step = lead(t_ms)-t_ms) ->rt.nucVSraw
sunderbg1973risefemale = 1.2631578947
# from 12 ST in 95 ms
sunderbg1973fallfemale = -1.7142857143
# from 12 ST in 70 ms
sunderbg1973risemale = 1.1428571429
# from 12 ST in 105 ms
sunderbg1973fallmale = -1.6
# allowing really fast movements from sundberg
sunderbg1973fast_rise = 1.6
sunderbg1973fast_fall = -1.7142857143
rt.nucVSraw$speaker_gender<-"female participant"
table(rt.nucVSraw$speaker_gender)
rt.nucVSraw<-rt.nucVSraw %>%
group_by(Filename) %>%
mutate(lead_ST= lead(ST, order_by=t_ms),
ST_diff = lead_ST-ST)
View(rt.nucVSraw)
rt.nucVSraw<-rt.nucVSraw %>%
group_by(speaker) %>%
mutate(speaker_mean= mean(F0),
ST=f2st(F0,base=5000))
rt.nucVSraw %>% group_by(Filename) %>%
mutate(time_step = lead(t_ms)-t_ms) ->rt.nucVSraw
sunderbg1973risefemale = 1.2631578947
# from 12 ST in 95 ms
sunderbg1973fallfemale = -1.7142857143
# from 12 ST in 70 ms
sunderbg1973risemale = 1.1428571429
# from 12 ST in 105 ms
sunderbg1973fallmale = -1.6
# allowing really fast movements from sundberg
sunderbg1973fast_rise = 1.6
sunderbg1973fast_fall = -1.7142857143
rt.nucVSraw$speaker_gender<-"female participant"
table(rt.nucVSraw$speaker_gender)
rt.nucVSraw<-rt.nucVSraw %>%
group_by(Filename) %>%
mutate(lead_ST= lead(ST, order_by=t_ms),
ST_diff = lead_ST-ST)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(tidyverse)
rt.nucVSraw<-read.delim("_rising_tunes_raw.txt",sep = "") # a big file.....
rt.nucVSraw<-droplevels(subset(rt.nucVSraw,rt.nucVSraw$Label=="harmony"|rt.nucVSraw$Label=="melanie"|rt.nucVSraw$Label=="madelyn"))
nlevels(as.factor(rt.nucVSraw$Filename))
#rt.nucVSraw %>% select(-strF0) -> rt.nucVSraw
colnames(rt.nucVSraw)[6] <- "F0"
# for snack
#rt.nucVSraw %>% filter(F0!=0) ->rt.nucVSraw
rt.nucVSraw <- rt.nucVSraw %>%
mutate(Filename = gsub("^[^/]*/","",Filename))
rt.nucVSraw <- rt.nucVSraw %>%
mutate(Filename = gsub("^[^/]*/","",Filename))
rt.nucVSraw <- rt.nucVSraw %>%
mutate(Filename = gsub("^[^/]*/","",Filename))
rt.nucVSraw <- rt.nucVSraw %>%
mutate(Filename = gsub(".mat","",Filename))
#################################################################################
rt.nucVSraw <- rt.nucVSraw %>%
separate(Filename,c("speaker","crit_word","prec_speakers","prec_word","trial_num","tune"),remove = F)
rt.nucVSraw$t_ms<-as.numeric(rt.nucVSraw$t_ms)
# semitones for 10 ms only ---
library(hqmisc)
rt.nucVSraw<-rt.nucVSraw %>%
group_by(speaker) %>%
mutate(speaker_mean= mean(F0),
ST=f2st(F0,base=5000))
rt.nucVSraw %>% group_by(Filename) %>%
mutate(time_step = lead(t_ms)-t_ms) ->rt.nucVSraw
sunderbg1973risefemale = 1.2631578947
# from 12 ST in 95 ms
sunderbg1973fallfemale = -1.7142857143
# from 12 ST in 70 ms
sunderbg1973risemale = 1.1428571429
# from 12 ST in 105 ms
sunderbg1973fallmale = -1.6
# from 12 ST in 75 ms
# allowing really fast movements from sundberg
sunderbg1973fast_rise = 1.6
sunderbg1973fast_fall = -1.7142857143
## ADD SPEAKER GENDER
rt.nucVSraw$speaker_gender<-"female participant"
table(rt.nucVSraw$speaker_gender)
rt.nucVSraw<-rt.nucVSraw %>%
group_by(Filename) %>%
mutate(lead_ST= lead(ST, order_by=t_ms),
ST_diff = lead_ST-ST)
View(rt.nucVSraw)
data<-data %>%
group_by(Filename) %>%
mutate(lead_ST= lead(ST, order_by=t_ms),
ST_diff = lead_ST-ST,
ST_err = ifelse(ST_diff>risethreshold|ST_diff<(fallthreshold),1,0),
ST_err_trial_mean = mean(ST_err,na.rm = T),
ST_err_count = sum(ST_err,na.rm = T),
ST_err_in_trial=ifelse(ST_err_trial_mean>0,1,0))
risethreshold = 1.2631578947
# from 12 ST in 95 ms
fallthreshold = -1.7142857143
data<-data %>%
group_by(Filename) %>%
mutate(lead_ST= lead(ST, order_by=t_ms),
ST_diff = lead_ST-ST,
ST_err = ifelse(ST_diff>risethreshold|ST_diff<(fallthreshold),1,0),
ST_err_trial_mean = mean(ST_err,na.rm = T),
ST_err_count = sum(ST_err,na.rm = T),
ST_err_in_trial=ifelse(ST_err_trial_mean>0,1,0))
table(data$ST_err_count)
table(data$ST_err_trial_mean)
data<-data %>%
group_by(Filename) %>%
mutate(lead_ST= lead(ST, order_by=t_ms),
ST_diff = lead_ST-ST,
ST_err = ifelse(ST_diff>risethreshold|ST_diff<(fallthreshold),1,0),
ST_err_trial_mean = mean(ST_err,na.rm = T),
ST_err_count = sum(ST_err,na.rm = T),
ST_err_in_trial=ifelse(ST_err_trial_mean>0,1,0))
## created by Jeremy Steffman
## last updated 11-27-21
##########################################################################################
## This script detects F0 jumps which exceed a particular threshold in semi-tones. Some thresholds from papers document rate of F0-change are included, but these can be customized.
## A particular data frame structure is required, see below.
## commented lines below explain each step.
## save files are put into the "output" folder.
##########################################################################################
### REQUIRES THESE PACKAGES ###############################################################
#install.packages("tidyverse") # uncomment and run if needed
#install.packages("hqmisc") # uncomment and run if needed
#########################################################################################
library(tidyverse);library(hqmisc)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) # set working directory to the folder this script is in-
###  demo data here##
data<-read.csv("demo_data.csv",sep = ",") # change filepath as needed- if you don't run line 14 above
##########################################################################################
# THIS SCRIPT ASSUMES that there are columns called (1) "Filename" (2) "t_ms" and (3) "F0"
## Filename must uniquely identify each F0 trajectory of interest. These are just numbers in the example file.
## t_ms should be a time-series.
## F0 should be measured F0 in Hz, at each time. THIS SCRIPT ASSUMES 10 ms time steps, though this can be adjusted.
##########################################################################################
# compute semitones from Hz, with 100 Hz baseline
data<-data %>%mutate(ST=f2st(F0,base=100))
# compute time step
data<-data %>% mutate(time_step = lead(t_ms)-t_ms)
# set thresholds for what counts as "too fast" of a rise or fall
# These thresholds are from the female speakers in Sundberg (1973), who produced glissando as quickly as possible. They are thus a fairly reasonable upper limit on how fast humans should be able to produce f0 changes (n.b. females were on aggreate faster than males).
# citation: Sundberg, J. (1973). Data on maximum speed of pitch changes. Speech transmission laboratory quarterly progress and status report, 4, 39-47.
risethreshold = 1.2631578947
# from 12 ST in 95 ms
fallthreshold = -1.7142857143
# from 12 ST in 70 ms
data<-data %>%
group_by(Filename) %>%
mutate(lead_ST= lead(ST, order_by=t_ms),
ST_diff = lead_ST-ST,
ST_err = ifelse(ST_diff>risethreshold|ST_diff<(fallthreshold),1,0),
ST_err_trial_mean = mean(ST_err,na.rm = T),
ST_err_count = sum(ST_err,na.rm = T),
ST_err_in_trial=ifelse(ST_err_trial_mean>0,1,0))
View(data)
data<-data %>%
group_by(Filename) %>%
mutate(lead_ST= lead(ST, order_by=t_ms),
ST_diff = lead_ST-ST,
ST_err = ifelse(ST_diff>risethreshold|ST_diff<fallthreshold,1,0),
ST_err_trial_mean = mean(ST_err,na.rm = T),
ST_err_count = sum(ST_err,na.rm = T),
ST_err_in_trial=ifelse(ST_err_trial_mean>0,1,0))
mean(ST_err_in_trial)
mean(data$ST_err_in_trial)
hist(ST_err_trial_mean)
hist(data$ST_err_trial_mean)
risethreshold = 1.6
# from 12 ST in 95 ms
fallthreshold = -1.7142857143
data<-data %>%
group_by(Filename) %>%
mutate(lead_ST= lead(ST, order_by=t_ms),
ST_diff = lead_ST-ST,
ST_err = ifelse(ST_diff>risethreshold|ST_diff<fallthreshold,1,0),
ST_err_trial_mean = mean(ST_err,na.rm = T),
ST_err_count = sum(ST_err,na.rm = T),
ST_err_in_trial=ifelse(ST_err_trial_mean>0,1,0))
hist(data$ST_err_trial_mean)
data_summary<- data %>% group_by(Filename) %>% select(ST_err_trial_mean,ST_err_count,ST_err_in_trial, Filename) %>%   slice(1)
View(data_summary)
error_summary<- data %>% group_by(Filename) %>% select(ST_err_trial_mean,ST_err_count,ST_err_in_trial, Filename) %>%   slice(1)
mean(error_summary$ST_err_in_trial)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(tidyverse)
rt.nucVSraw<-read.delim("_rising_tunes_raw.txt",sep = "") # a big file.....
rt.nucVSraw<-droplevels(subset(rt.nucVSraw,rt.nucVSraw$Label=="harmony"|rt.nucVSraw$Label=="melanie"|rt.nucVSraw$Label=="madelyn"))
nlevels(as.factor(rt.nucVSraw$Filename))
#rt.nucVSraw %>% select(-strF0) -> rt.nucVSraw
colnames(rt.nucVSraw)[6] <- "F0"
# for snack
#rt.nucVSraw %>% filter(F0!=0) ->rt.nucVSraw
rt.nucVSraw <- rt.nucVSraw %>%
mutate(Filename = gsub("^[^/]*/","",Filename))
rt.nucVSraw <- rt.nucVSraw %>%
mutate(Filename = gsub("^[^/]*/","",Filename))
rt.nucVSraw <- rt.nucVSraw %>%
mutate(Filename = gsub("^[^/]*/","",Filename))
rt.nucVSraw <- rt.nucVSraw %>%
mutate(Filename = gsub(".mat","",Filename))
#################################################################################
rt.nucVSraw <- rt.nucVSraw %>%
separate(Filename,c("speaker","crit_word","prec_speakers","prec_word","trial_num","tune"),remove = F)
rt.nucVSraw$t_ms<-as.numeric(rt.nucVSraw$t_ms)
# semitones for 10 ms only ---
library(hqmisc)
rt.nucVSraw<-rt.nucVSraw %>%
group_by(speaker) %>%
mutate(speaker_mean= mean(F0),
ST=f2st(F0,base=speaker_mean))
rt.nucVSraw %>% group_by(Filename) %>%
mutate(time_step = lead(t_ms)-t_ms) ->rt.nucVSraw
sunderbg1973risefemale = 1.2631578947
# from 12 ST in 95 ms
sunderbg1973fallfemale = -1.7142857143
# from 12 ST in 70 ms
sunderbg1973risemale = 1.1428571429
# from 12 ST in 105 ms
sunderbg1973fallmale = -1.6
# from 12 ST in 75 ms
# allowing really fast movements from sundberg
sunderbg1973fast_rise = 1.6
sunderbg1973fast_fall = -1.7142857143
## ADD SPEAKER GENDER
rt.nucVSraw$speaker_gender<-"female participant"
table(rt.nucVSraw$speaker_gender)
rt.nucVSraw<-rt.nucVSraw %>%
group_by(Filename) %>%
mutate(lead_ST= lead(ST, order_by=t_ms),
ST_diff = lead_ST-ST,
ST_err = ifelse(speaker_gender=="female participant"&time_step==10&ST_diff>sunderbg1973risefemale|speaker_gender=="female participant"&time_step==10&ST_diff<(sunderbg1973fallfemale),1,ifelse(speaker_gender=="male participant"&time_step==10&ST_diff>sunderbg1973risemale|speaker_gender=="male participant"&time_step==10&ST_diff<(sunderbg1973fallmale),1,0)),
ST_err_trial_mean = mean(ST_err,na.rm = T),
ST_err_count = sum(ST_err,na.rm = T),
ST_err_in_trial=ifelse(ST_err_trial_mean>0,1,0),
ST_err_in_trial_counts_1=ifelse(ST_err_count>1,1,0),
ST_err_in_trial_counts_2=ifelse(ST_err_count>2,1,0),
ST_err_fast = ifelse(ST_diff>sunderbg1973fast_rise|ST_diff<sunderbg1973fast_fall,1,0),
ST_err_fast_trial_mean = mean(ST_err_fast,na.rm = T),
ST_err_fast_count = sum(ST_err_fast,na.rm = T),
ST_err_fast_in_trial=ifelse(ST_err_fast_trial_mean>0,1,0),
ST_err_fast_in_trial_counts_1=ifelse(ST_err_fast_count>1,1,0),
ST_err_fast_in_trial_counts_2=ifelse(ST_err_fast_count>2,1,0))
table(rt.nucVSraw$ST_err_count)
rt.nucVSraw<-rt.nucVSraw %>%
group_by(Filename) %>%
mutate(total_jump = sum(abs(ST_diff[ST_err==1]),na.rm = T))
mean(rt.nucVSraw$ST_err_in_trial,na.rm = T)
## created by Jeremy Steffman
## last updated 11-27-21
##########################################################################################
## This script detects F0 jumps which exceed a particular threshold in semi-tones. Some thresholds from papers document rate of F0-change are included, but these can be customized.
## A particular data frame structure is required, see below.
## commented lines below explain each step.
## save files are put into the "output" folder.
##########################################################################################
### REQUIRES THESE PACKAGES ###############################################################
#install.packages("tidyverse") # uncomment and run if needed
#install.packages("hqmisc") # uncomment and run if needed
#########################################################################################
library(tidyverse);library(hqmisc)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) # set working directory to the folder this script is in-
###  demo data here##
data<-read.csv("demo_data.csv",sep = ",") # change filepath as needed- if you don't run line 14 above
##########################################################################################
# THIS SCRIPT ASSUMES that there are columns called (1) "Filename" (2) "t_ms" and (3) "F0"
## Filename must uniquely identify each F0 trajectory of interest. These are just numbers in the example file.
## t_ms should be a time-series.
## F0 should be measured F0 in Hz, at each time. THIS SCRIPT ASSUMES 10 ms time steps, though this can be adjusted.
##########################################################################################
# compute semitones from Hz, with 100 Hz baseline
data<-data %>%mutate(ST=f2st(F0,base=100))
# compute time step
data<-data %>% mutate(time_step = lead(t_ms)-t_ms)
# set thresholds for what counts as "too fast" of a rise or fall
# These thresholds are from the female speakers in Sundberg (1973), who produced glissando as quickly as possible. They are thus a fairly reasonable upper limit on how fast humans should be able to produce f0 changes (n.b. females were on aggreate faster than males).
# citation: Sundberg, J. (1973). Data on maximum speed of pitch changes. Speech transmission laboratory quarterly progress and status report, 4, 39-47.
risethreshold = 1.6
# from 12 ST in 95 ms
fallthreshold = -1.7142857143
# from 12 ST in 70 ms
data<-data %>%
group_by(Filename) %>%
mutate(lead_ST= lead(ST, order_by=t_ms),
ST_diff = lead_ST-ST,
ST_err = ifelse(ST_diff>risethreshold|ST_diff<fallthreshold,1,0),
ST_err_trial_mean = mean(ST_err,na.rm = T),
ST_err_count = sum(ST_err,na.rm = T),
ST_err_in_trial=ifelse(ST_err_trial_mean>0,1,0))
hist(data$ST_err_trial_mean)
error_summary<- data %>% group_by(Filename) %>% select(ST_err_trial_mean,ST_err_count,ST_err_in_trial, Filename) %>%   slice(1)
mean(error_summary$ST_err_in_trial)
data<-data %>%
group_by(Filename) %>%
mutate(lead_ST= lead(ST, order_by=t_ms),
ST_diff = lead_ST-ST,
ST_err = ifelse(ST_diff>risethreshold,1
ifelse(ST_diff<fallthreshold,1,0)),
ST_err_trial_mean = mean(ST_err,na.rm = T),
ST_err_count = sum(ST_err,na.rm = T),
ST_err_in_trial=ifelse(ST_err_trial_mean>0,1,0))
## created by Jeremy Steffman
## last updated 11-27-21
##########################################################################################
## This script detects F0 jumps which exceed a particular threshold in semi-tones. Some thresholds from papers document rate of F0-change are included, but these can be customized.
## A particular data frame structure is required, see below.
## commented lines below explain each step.
## save files are put into the "output" folder.
##########################################################################################
### REQUIRES THESE PACKAGES ###############################################################
#install.packages("tidyverse") # uncomment and run if needed
#install.packages("hqmisc") # uncomment and run if needed
#########################################################################################
library(tidyverse);library(hqmisc)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) # set working directory to the folder this script is in-
###  demo data here##
data<-read.csv("demo_data.csv",sep = ",") # change filepath as needed- if you don't run line 14 above
##########################################################################################
# THIS SCRIPT ASSUMES that there are columns called (1) "Filename" (2) "t_ms" and (3) "F0"
## Filename must uniquely identify each F0 trajectory of interest. These are just numbers in the example file.
## t_ms should be a time-series.
## F0 should be measured F0 in Hz, at each time. THIS SCRIPT ASSUMES 10 ms time steps, though this can be adjusted.
##########################################################################################
# compute semitones from Hz, with 100 Hz baseline
data<-data %>%mutate(ST=f2st(F0,base=100))
# compute time step
data<-data %>% mutate(time_step = lead(t_ms)-t_ms)
# set thresholds for what counts as "too fast" of a rise or fall
# These thresholds are from the female speakers in Sundberg (1973), who produced glissando as quickly as possible. They are thus a fairly reasonable upper limit on how fast humans should be able to produce f0 changes (n.b. females were on aggreate faster than males).
# citation: Sundberg, J. (1973). Data on maximum speed of pitch changes. Speech transmission laboratory quarterly progress and status report, 4, 39-47.
risethreshold = 1.6
# from 12 ST in 95 ms
fallthreshold = -1.7142857143
# from 12 ST in 70 ms
data<-data %>%
group_by(Filename) %>%
mutate(lead_ST= lead(ST, order_by=t_ms),
ST_diff = lead_ST-ST,
ST_err = ifelse(ST_diff>risethreshold,1,
ifelse(ST_diff<fallthreshold,1,0)),
ST_err_trial_mean = mean(ST_err,na.rm = T),
ST_err_count = sum(ST_err,na.rm = T),
ST_err_in_trial=ifelse(ST_err_trial_mean>0,1,0))
hist(data$ST_err_trial_mean)
error_summary<- data %>% group_by(Filename) %>% select(ST_err_trial_mean,ST_err_count,ST_err_in_trial, Filename) %>%   slice(1)
mean(error_summary$ST_err_in_trial)
View(data)
# compute semitones from Hz, with 100 Hz baseline
data<-data %>%mutate(ST=f2st(F0,base=50))
# compute time step
data<-data %>% mutate(time_step = lead(t_ms)-t_ms)
risethreshold = 1.6
# from 12 ST in 95 ms
fallthreshold = -1.7142857143
data<-data %>%
group_by(Filename) %>%
mutate(lead_ST= lead(ST, order_by=t_ms),
ST_diff = lead_ST-ST,
ST_err = ifelse(ST_diff>risethreshold,1,
ifelse(ST_diff<fallthreshold,1,0)),
ST_err_trial_mean = mean(ST_err,na.rm = T),
ST_err_count = sum(ST_err,na.rm = T),
ST_err_in_trial=ifelse(ST_err_trial_mean>0,1,0))
hist(data$ST_err_trial_mean)
error_summary<- data %>% group_by(Filename) %>% select(ST_err_trial_mean,ST_err_count,ST_err_in_trial, Filename) %>%   slice(1)
mean(error_summary$ST_err_in_trial)
data<-data %>%
group_by(Filename) %>%
mutate(lead_ST= lead(ST, order_by=t_ms),
ST_diff = lead_ST-ST,
ST_err = ifelse(ST_diff>risethreshold|
ST_diff<fallthreshold,1,0)),
ST_err_trial_mean = mean(ST_err,na.rm = T),
ST_err_count = sum(ST_err,na.rm = T),
ST_err_in_trial=ifelse(ST_err_trial_mean>0,1,0))
data<-data %>%
group_by(Filename) %>%
mutate(lead_ST= lead(ST, order_by=t_ms),
ST_diff = lead_ST-ST,
ST_err = ifelse(ST_diff>risethreshold|
ST_diff<fallthreshold,1,0),
ST_err_trial_mean = mean(ST_err,na.rm = T),
ST_err_count = sum(ST_err,na.rm = T),
ST_err_in_trial=ifelse(ST_err_trial_mean>0,1,0))
hist(data$ST_err_trial_mean)
error_summary<- data %>% group_by(Filename) %>% select(ST_err_trial_mean,ST_err_count,ST_err_in_trial, Filename) %>%   slice(1)
mean(error_summary$ST_err_in_trial)
## created by Jeremy Steffman
## last updated 11-27-21
##########################################################################################
## This script detects F0 jumps which exceed a particular threshold in semi-tones. Some thresholds from papers document rate of F0-change are included, but these can be customized.
## A particular data frame structure is required, see below.
## commented lines below explain each step.
## save files are put into the "output" folder.
##########################################################################################
### REQUIRES THESE PACKAGES ###############################################################
#install.packages("tidyverse") # uncomment and run if needed
#install.packages("hqmisc") # uncomment and run if needed
#########################################################################################
library(tidyverse);library(hqmisc)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) # set working directory to the folder this script is in-
###  demo data here##
data<-read.csv("demo_data.csv",sep = ",") # change filepath as needed- if you don't run line 14 above
##########################################################################################
# THIS SCRIPT ASSUMES that there are columns called (1) "Filename" (2) "t_ms" and (3) "F0"
## Filename must uniquely identify each F0 trajectory of interest. These are just numbers in the example file.
## t_ms should be a time-series.
## F0 should be measured F0 in Hz, at each time. THIS SCRIPT ASSUMES 10 ms time steps, though this can be adjusted.
##########################################################################################
# compute semitones from Hz, with 100 Hz baseline
data<-data %>%mutate(ST=f2st(F0,base=100))
# compute time step
data<-data %>% mutate(time_step = lead(t_ms)-t_ms)
# compute semitones from Hz, with 100 Hz baseline
data<-data %>%mutate(ST=f2st(F0,base=100))
risethreshold = 1.6
# from 12 ST in 95 ms
fallthreshold = -1.7142857143
data<-data %>%
group_by(Filename) %>%
mutate(lead_ST= lead(ST, order_by=t_ms),
ST_diff = lead_ST-ST,
ST_err = ifelse(ST_diff>risethreshold|
ST_diff<fallthreshold,1,0),
ST_err_trial_mean = mean(ST_err,na.rm = T),
ST_err_count = sum(ST_err,na.rm = T),
ST_err_in_trial=ifelse(ST_err_trial_mean>0,1,0))
hist(data$ST_err_trial_mean)
## created by Jeremy Steffman
## last updated 11-27-21
##########################################################################################
## This script detects F0 jumps which exceed a particular threshold in semi-tones. Some thresholds from papers document rate of F0-change are included, but these can be customized.
## A particular data frame structure is required, see below.
## commented lines below explain each step.
## save files are put into the "output" folder.
##########################################################################################
### REQUIRES THESE PACKAGES ###############################################################
#install.packages("tidyverse") # uncomment and run if needed
#install.packages("hqmisc") # uncomment and run if needed
#########################################################################################
library(tidyverse);library(hqmisc)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) # set working directory to the folder this script is in-
###  demo data here##
data<-read.csv("demo_data.csv",sep = ",") # change filepath as needed- if you don't run line 14 above
##########################################################################################
# THIS SCRIPT ASSUMES that there are columns called (1) "Filename" (2) "t_ms" and (3) "F0"
## Filename must uniquely identify each F0 trajectory of interest. These are just numbers in the example file.
## t_ms should be a time-series.
## F0 should be measured F0 in Hz, at each time. THIS SCRIPT ASSUMES 10 ms time steps, though this can be adjusted.
##########################################################################################
# compute semitones from Hz, with 100 Hz baseline
data<-data %>%mutate(ST=f2st(F0,base=100))
# set thresholds for what counts as "too fast" of a rise or fall
# These thresholds are from the female speakers in Sundberg (1973), who produced glissando as quickly as possible. They are thus a fairly reasonable upper limit on how fast humans should be able to produce f0 changes (n.b. females were on aggreate faster than males).
# citation: Sundberg, J. (1973). Data on maximum speed of pitch changes. Speech transmission laboratory quarterly progress and status report, 4, 39-47.
risethreshold = 2
# from 12 ST in 95 ms
fallthreshold = -2
# from 12 ST in 70 ms
data<-data %>%
group_by(Filename) %>%
mutate(lead_ST= lead(ST, order_by=t_ms),
ST_diff = lead_ST-ST,
ST_err = ifelse(ST_diff>risethreshold|
ST_diff<fallthreshold,1,0),
ST_err_trial_mean = mean(ST_err,na.rm = T),
ST_err_count = sum(ST_err,na.rm = T),
ST_err_in_trial=ifelse(ST_err_trial_mean>0,1,0))
hist(data$ST_err_trial_mean)
error_summary<- data %>% group_by(Filename) %>% select(ST_err_trial_mean,ST_err_count,ST_err_in_trial, Filename) %>%  slice(1)
mean(error_summary$ST_err_in_trial)
